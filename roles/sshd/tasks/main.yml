---
- name: Retrieve local SSH client's settings per host
  set_fact:
    ssh_client_ciphers: "{{ lookup('pipe', 'ssh -ttG ' + ansible_host + ' | grep ciphers') }}"
    ssh_client_kex: "{{ lookup('pipe', 'ssh -ttG ' + ansible_host + ' | grep kexalgorithms') }}"
    ssh_client_macs: "{{ lookup('pipe', 'ssh -ttG ' + ansible_host + ' | grep macs') }}"
    ssh_client_host_key_algorithms: "{{ lookup('pipe', 'ssh -ttG ' + ansible_host + ' | grep hostkeyalgorithms') }}"
  when: openssh_6_8_plus and validate_ssh | default(true)

- name: Validate compatible settings between SSH client and server
  assert:
    that:
      - overlapping_ciphers | count
      - overlapping_kex | count
      - overlapping_macs | count
      - overlapping_host_keys | count
    msg: "{{ lookup('template', 'validate_ssh_msg.j2') }}"
  when: openssh_6_8_plus and validate_ssh | default(true)
  
- name: Verify dict format for apt package component variables
  fail:
    msg: "{{ lookup('template', 'package_vars_wrong_format_msg.j2') }}"
  when: package_vars_wrong_format | count
  vars:
    package_vars:
      sshd_packages_default: "{{ sshd_packages_default }}"
      sshd_packages_custom: "{{ sshd_packages_custom }}"
    package_vars_wrong_format: "[{% for k,v in package_vars.iteritems() if v | type_debug != 'dict' %}'{{ k }}',{% endfor %}]"

- name: Verify dict format for apt package combined variables
  fail:
    msg: "{{ lookup('template', 'package_vars_wrong_format_msg.j2') }}"
  when: package_vars_wrong_format | count
  vars:
    package_vars:
      sshd_packages: "{{ sshd_packages }}"
    package_vars_wrong_format: "[{% for k,v in package_vars.iteritems() if v | type_debug != 'dict' %}'{{ k }}',{% endfor %}]"

- name: Ensure latest SSH server and client are installed
  apt:
    name: "{{ item.key }}"
    state: "{{ item.value }}"
    cache_valid_time: "{{ apt_cache_valid_time }}"
  with_dict: "{{ sshd_packages }}"
  notify: restart ssh

- name: Create a secure sshd_config
  template:
    src: "{{ sshd_config }}"
    dest: /etc/ssh/sshd_config
    mode: 0600
    validate: '/usr/sbin/sshd -T -f %s'
  notify: restart ssh

- name: Create a secure ssh_config
  template:
    src: "{{ ssh_config }}"
    dest: /etc/ssh/ssh_config
    mode: 0644

- name: Remove Diffie-Hellman moduli of size < 2000
  lineinfile:
    backup: yes
    dest: /etc/ssh/moduli
    regexp: ^(\d+\s){4}1
    state: absent
